- hosts: 127.0.0.1
  vars:
    nvim_cfg_url: "https://raw.githubusercontent.com/nicomiguelino/dotfiles/main/init.vim"
    nvim_cfg_dir: "{{ lookup('env', 'HOME') }}/.config/nvim"
    vim_plug_url: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    vim_plug_default_dir: "{{ lookup('env', 'HOME') }}/.local/share"
    oh_my_zsh_url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
    git_username: "nicomiguelino"
    git_email: "nicomiguelino2014@gmail.com"
    git_editor: "nvim"
  tasks:
    - name: Install development dependencies
      become: yes
      ansible.builtin.apt:
        update_cache: yes
        name:
          - fzf
          - git
          - neovim
          - ripgrep
          - tmux
          - tree
          - zsh
          - wget
        state: present
      register: aptout
    - name: Configure Git
      ansible.builtin.shell: |
        git config --global user.name "{{ git_username }}"
        git config --global user.email "{{ git_email }}"
        git config --global core.editor "{{ git_editor }}"
      args:
        executable: /bin/bash
    - name: Configure Neovim
      ansible.builtin.shell: |
        curl -sfLo {{ nvim_cfg_dir }}/init.vim --create-dirs {{ nvim_cfg_url }}
        curl -sfLo {{ vim_plug_default_dir }}/nvim/site/autoload/plug.vim --create-dirs {{ vim_plug_url }}
        nvim --headless +PlugInstall +qall
      args:
        executable: /bin/bash
    - name: Install Docker Buildx
      ansible.builtin.shell: |
        mkdir -p ~/.docker/cli-plugins
        wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.10.3/buildx-v0.10.3.linux-arm64
    - name: Install Oh My Zsh
      ansible.builtin.shell: |
        sh -c "$(curl -fsSL {{ oh_my_zsh_url }})" "" --unattended
      args:
        executable: /bin/bash
    - name: Set Zsh as the default shell
      ansible.builtin.lineinfile:
        path: "{{ lookup('env', 'HOME') }}/.bashrc"
        line: exec /usr/bin/zsh
    - name: Configure Zsh
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.zshrc"
        block: |
          # Starting directory
          if [ -d ${HOME}/screenly ]; then
            cd ${HOME}/screenly
          fi

          # Aliases
          alias docker-compose='docker compose \
            -f docker-compose.yml \
            -f docker-compose.override.yml'

          # Export various environment variables
          export MY_IP=$(ip -4 route get 8.8.8.8 | awk {'print $7'} | tr -d '\n')
          TOTAL_MEMORY_KB=$(grep MemTotal /proc/meminfo | awk {'print $2'})
          export VIEWER_MEMORY_LIMIT_KB=$(echo "$TOTAL_MEMORY_KB" \* 0.7 | bc)

          # Hard code this to latest for now.
          export DOCKER_TAG="latest"
          export DOCKER_TAG="$(git rev-parse --short HEAD)"

          # Detect Raspberry Pi version
          if [ -f /proc/device-tree/model ]; then
            if grep -qF "Raspberry Pi 4" /proc/device-tree/model; then
                export DEVICE_TYPE="pi4"
            elif grep -qF "Raspberry Pi 3" /proc/device-tree/model; then
                export DEVICE_TYPE="pi3"
            elif grep -qF "Raspberry Pi 2" /proc/device-tree/model; then
                export DEVICE_TYPE="pi2"
            else
                # If all else fail, assume pi1
                export DEVICE_TYPE="pi1"
            fi
          fi
    - name: Install Oh My Tmux!
      ansible.builtin.shell: |
        cd
        git clone https://github.com/gpakosz/.tmux.git
        ln -s -f .tmux/.tmux.conf
        cp .tmux/.tmux.conf.local .
      args:
        executable: /bin/bash
    - name: Configure Oh My Tmux!
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.tmux.conf.local"
        block: |
          # Set default prefix back to C-b.
          set -g prefix2 C-b
          bind C-b send-prefix -2
          setw -g mode-keys vi

          # Enable the Powerline look.
          tmux_conf_theme_left_separator_main='\uE0B0'
          tmux_conf_theme_left_separator_sub='\uE0B1'
          tmux_conf_theme_right_separator_main='\uE0B2'
          tmux_conf_theme_right_separator_sub='\uE0B3'
